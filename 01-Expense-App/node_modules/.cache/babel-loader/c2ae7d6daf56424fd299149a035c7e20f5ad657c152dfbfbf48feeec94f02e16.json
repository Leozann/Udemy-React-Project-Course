{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adzano\\\\Desktop\\\\ini masuk git\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Card from '../General/CardComponent';\nimport ExpenseItem from './ExpenseItem';\nimport ExpenseFilter from './ExpenseFilter';\nimport ExpenseList from './ExpenseList';\nimport '../../styles/Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filterYear, setFilterYear] = useState('all');\n  function getFilterYearHandler(year) {\n    setFilterYear(year);\n  }\n  const runFilter = props.expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === filterYear;\n  });\n\n  // const expensesDatas = {\n  //     showDatas: props.expenses,\n  //     filterByYear: filterYear\n  // }\n\n  const filterList = () => {\n    if (setFilterYear === 'all') {\n      return props.expenses;\n    } else if (runFilter.length === 0) {\n      return runFilter;\n    }\n  };\n\n  // console.log(expensesDatas)\n\n  // function showExpenseItem() {\n  //     const expenseItem = props.expenses\n  //     const showExpense = filterYear\n\n  //     console.log(expenseItem.length)\n\n  //     const runFilter = expenseItem.filter(expense => {\n  //         return expense.date.getFullYear().toString() === filterYear\n  //     }).map((expense) => (\n  //         <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date}></ExpenseItem>\n  //     ))\n\n  //     if (showExpense === 'all') {\n  //         return expenseItem.map((expense) => (\n  //             <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date}></ExpenseItem>\n  //         ))\n  //     } else if (showExpense === '2020') {\n  //         if (runFilter.length > 0) {\n  //             return runFilter\n  //         } else {\n  //             return <p className='expense-hint'>Data is Empty</p>\n  //         }\n  //         // return runFilter\n  //     } else if (showExpense === '2021') {\n  //         if (runFilter.length > 0) {\n  //             return runFilter\n  //         } else {\n  //             return <p className='expense-hint'>Data is Empty</p>\n  //         }\n  //     }\n  //     else if (showExpense === '2022') {\n  //         if (runFilter.length > 0) {\n  //             return runFilter\n  //         } else {\n  //             return <p className='expense-hint'>Data is Empty</p>\n  //         }\n  //     }\n  //     else if (showExpense === '2023') {\n  //         if (runFilter.length > 0) {\n  //             return runFilter\n  //         } else {\n  //             return <p className='expense-hint'>Data is Empty</p>\n  //         }\n  //     }\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        selectedYear: filterYear,\n        setYear: getFilterYearHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n        expensesDatas: filterList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(Expenses, \"AIcOCmUPcG3p6lrx8oloZB6CoSE=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["useState","Card","ExpenseItem","ExpenseFilter","ExpenseList","jsxDEV","_jsxDEV","Expenses","props","_s","filterYear","setFilterYear","getFilterYearHandler","year","runFilter","expenses","filter","expense","date","getFullYear","toString","filterList","length","children","className","selectedYear","setYear","fileName","_jsxFileName","lineNumber","columnNumber","expensesDatas","_c","$RefreshReg$"],"sources":["C:/Users/Adzano/Desktop/ini masuk git/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import { useState } from 'react';\r\nimport Card from '../General/CardComponent';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport ExpenseFilter from './ExpenseFilter'\r\nimport ExpenseList from './ExpenseList';\r\n\r\nimport '../../styles/Expenses.css';\r\n\r\nfunction Expenses(props) {\r\n\r\n    const [filterYear, setFilterYear] = useState('all')\r\n\r\n    function getFilterYearHandler(year) {\r\n        setFilterYear(year)\r\n\r\n    }\r\n\r\n    const runFilter = props.expenses.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filterYear\r\n    })\r\n\r\n    // const expensesDatas = {\r\n    //     showDatas: props.expenses,\r\n    //     filterByYear: filterYear\r\n    // }\r\n\r\n    const filterList = () => {\r\n        if (setFilterYear === 'all') {\r\n            return props.expenses\r\n        } else if (runFilter.length === 0) {\r\n            return runFilter\r\n        }\r\n    }\r\n\r\n    // console.log(expensesDatas)\r\n\r\n    // function showExpenseItem() {\r\n    //     const expenseItem = props.expenses\r\n    //     const showExpense = filterYear\r\n\r\n    //     console.log(expenseItem.length)\r\n\r\n    //     const runFilter = expenseItem.filter(expense => {\r\n    //         return expense.date.getFullYear().toString() === filterYear\r\n    //     }).map((expense) => (\r\n    //         <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date}></ExpenseItem>\r\n    //     ))\r\n\r\n    //     if (showExpense === 'all') {\r\n    //         return expenseItem.map((expense) => (\r\n    //             <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date}></ExpenseItem>\r\n    //         ))\r\n    //     } else if (showExpense === '2020') {\r\n    //         if (runFilter.length > 0) {\r\n    //             return runFilter\r\n    //         } else {\r\n    //             return <p className='expense-hint'>Data is Empty</p>\r\n    //         }\r\n    //         // return runFilter\r\n    //     } else if (showExpense === '2021') {\r\n    //         if (runFilter.length > 0) {\r\n    //             return runFilter\r\n    //         } else {\r\n    //             return <p className='expense-hint'>Data is Empty</p>\r\n    //         }\r\n    //     }\r\n    //     else if (showExpense === '2022') {\r\n    //         if (runFilter.length > 0) {\r\n    //             return runFilter\r\n    //         } else {\r\n    //             return <p className='expense-hint'>Data is Empty</p>\r\n    //         }\r\n    //     }\r\n    //     else if (showExpense === '2023') {\r\n    //         if (runFilter.length > 0) {\r\n    //             return runFilter\r\n    //         } else {\r\n    //             return <p className='expense-hint'>Data is Empty</p>\r\n    //         }\r\n    //     }\r\n\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"expenses\">\r\n                <ExpenseFilter selectedYear={filterYear} setYear={getFilterYearHandler} />\r\n                {/* {showExpenseItem()} */}\r\n                <ExpenseList expensesDatas={filterList} />\r\n                {/* {props.expenses.map((expense) => (\r\n                    <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date}></ExpenseItem>\r\n                ))} */}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Expenses;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AAEvC,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAErB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnD,SAASY,oBAAoBA,CAACC,IAAI,EAAE;IAChCF,aAAa,CAACE,IAAI,CAAC;EAEvB;EAEA,MAAMC,SAAS,GAAGN,KAAK,CAACO,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAI;IAC/C,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKV,UAAU;EAC/D,CAAC,CAAC;;EAEF;EACA;EACA;EACA;;EAEA,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIV,aAAa,KAAK,KAAK,EAAE;MACzB,OAAOH,KAAK,CAACO,QAAQ;IACzB,CAAC,MAAM,IAAID,SAAS,CAACQ,MAAM,KAAK,CAAC,EAAE;MAC/B,OAAOR,SAAS;IACpB;EACJ,CAAC;;EAED;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACIR,OAAA;IAAAiB,QAAA,eACIjB,OAAA,CAACL,IAAI;MAACuB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACtBjB,OAAA,CAACH,aAAa;QAACsB,YAAY,EAAEf,UAAW;QAACgB,OAAO,EAAEd;MAAqB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE1ExB,OAAA,CAACF,WAAW;QAAC2B,aAAa,EAAEV;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIxC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACrB,EAAA,CAvFQF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAyFjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}