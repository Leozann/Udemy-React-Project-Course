{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adzano\\\\Desktop\\\\ini masuk git\\\\02-starting-project\\\\src\\\\components\\\\ResultComponent\\\\ResultTable.js\";\nimport '../../styles/ResultTable.css';\nimport ResultContent from './ResultContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultTable = props => {\n  // const tableContent = props.sendDataToTableContent\n  // const currentSaving = props.setSaving\n\n  // const formatCurrency = new Intl.NumberFormat('en-US', {\n  //     style: 'currency',\n  //     currency: 'USD',\n  //     minimumFractionDigits: 2,\n  //     maximumFractionDigits: 2,\n  // });\n\n  const newData = props.investData;\n  console.log(newData['current-savings']);\n  const yearlyData = [];\n  if (newData) {\n    let currentSavings = newData['current-savings'];\n    const yearlyContribution = newData['yearly-contribution'];\n    const expectedReturn = newData['expected-return'] / 100;\n    const duration = newData['invest-duration'];\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest (Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Invested Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResultContent, {\n      showContent: yearlyData,\n      setSaving: newData['current-savings']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_c = ResultTable;\nexport default ResultTable;\nvar _c;\n$RefreshReg$(_c, \"ResultTable\");","map":{"version":3,"names":["ResultContent","jsxDEV","_jsxDEV","ResultTable","props","newData","investData","console","log","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","showContent","setSaving","_c","$RefreshReg$"],"sources":["C:/Users/Adzano/Desktop/ini masuk git/02-starting-project/src/components/ResultComponent/ResultTable.js"],"sourcesContent":["import '../../styles/ResultTable.css'\r\nimport ResultContent from './ResultContent';\r\n\r\nconst ResultTable = (props) => {\r\n\r\n    // const tableContent = props.sendDataToTableContent\r\n    // const currentSaving = props.setSaving\r\n\r\n    // const formatCurrency = new Intl.NumberFormat('en-US', {\r\n    //     style: 'currency',\r\n    //     currency: 'USD',\r\n    //     minimumFractionDigits: 2,\r\n    //     maximumFractionDigits: 2,\r\n    // });\r\n\r\n    const newData = props.investData\r\n    console.log(newData['current-savings'])\r\n    const yearlyData = []\r\n    if (newData) {\r\n        let currentSavings = newData['current-savings'];\r\n        const yearlyContribution = newData['yearly-contribution'];\r\n        const expectedReturn = newData['expected-return'] / 100;\r\n        const duration = newData['invest-duration'];\r\n\r\n        for (let i = 0; i < duration; i++) {\r\n            const yearlyInterest = currentSavings * expectedReturn;\r\n            currentSavings += yearlyInterest + yearlyContribution;\r\n            yearlyData.push({\r\n                year: i + 1,\r\n                yearlyInterest: yearlyInterest,\r\n                savingsEndOfYear: currentSavings,\r\n                yearlyContribution: yearlyContribution,\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <table className=\"result\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Year</th>\r\n                    <th>Total Savings</th>\r\n                    <th>Interest (Year)</th>\r\n                    <th>Total Interest</th>\r\n                    <th>Invested Capital</th>\r\n                </tr>\r\n            </thead>\r\n            {/* <tbody>\r\n                {tableContent.map((yearData) => (\r\n                    <tr key={yearData.year}>\r\n                        <td>{yearData.year}</td>\r\n                        <td>{yearData.savingsEndOfYear}</td>\r\n                        <td>{yearData.yearlyInterest}</td>\r\n                        <td>{yearData.savingsEndOfYear - currentSaving - (yearData.yearlyContribution * yearData.year)}</td>\r\n                        <td>{currentSaving + (yearData.yearlyContribution * yearData.year)}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody> */}\r\n            <ResultContent showContent={yearlyData} setSaving={newData['current-savings']} />\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ResultTable;"],"mappings":";AAAA,OAAO,8BAA8B;AACrC,OAAOA,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAE3B;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,OAAO,GAAGD,KAAK,CAACE,UAAU;EAChCC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC,iBAAiB,CAAC,CAAC;EACvC,MAAMI,UAAU,GAAG,EAAE;EACrB,IAAIJ,OAAO,EAAE;IACT,IAAIK,cAAc,GAAGL,OAAO,CAAC,iBAAiB,CAAC;IAC/C,MAAMM,kBAAkB,GAAGN,OAAO,CAAC,qBAAqB,CAAC;IACzD,MAAMO,cAAc,GAAGP,OAAO,CAAC,iBAAiB,CAAC,GAAG,GAAG;IACvD,MAAMQ,QAAQ,GAAGR,OAAO,CAAC,iBAAiB,CAAC;IAE3C,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MAC/B,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACZC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACxB,CAAC,CAAC;IACN;EACJ;EAIA,oBACIT,OAAA;IAAOiB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBlB,OAAA;MAAAkB,QAAA,eACIlB,OAAA;QAAAkB,QAAA,gBACIlB,OAAA;UAAAkB,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbtB,OAAA;UAAAkB,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBtB,OAAA;UAAAkB,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBtB,OAAA;UAAAkB,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBtB,OAAA;UAAAkB,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAYRtB,OAAA,CAACF,aAAa;MAACyB,WAAW,EAAEhB,UAAW;MAACiB,SAAS,EAAErB,OAAO,CAAC,iBAAiB;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEhB,CAAC;AAAAG,EAAA,GA5DKxB,WAAW;AA8DjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}