{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adzano\\\\Desktop\\\\ini masuk git\\\\02-starting-project\\\\src\\\\components\\\\Result\\\\ResultList.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ResultItem from \"./ResultItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultList = props => {\n  _s();\n  const investSubmited = props.setDataInvest;\n  console.log(investSubmited);\n  const [calculatedData, SetCalculatedData] = useState(null);\n  function calculateHandler() {\n    const yearlyData = [];\n    let currentSavings = investSubmited['current-savings']; // feel free to change the shape of this input object!\n    const yearlyContribution = investSubmited['yearly-contribution']; // as mentioned: feel free to change the shape...\n    const expectedReturn = investSubmited['expected-return'] / 100;\n    const duration = investSubmited['duration'];\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    SetCalculatedData(yearlyData);\n  }\n  console.log(calculatedData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ResultItem, {\n      showResultData: calculateHandler()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ResultList, \"ihtVoOD5/8LizosBfjtB5i6wp74=\");\n_c = ResultList;\nexport default ResultList;\nvar _c;\n$RefreshReg$(_c, \"ResultList\");","map":{"version":3,"names":["useState","ResultItem","jsxDEV","_jsxDEV","ResultList","props","_s","investSubmited","setDataInvest","console","log","calculatedData","SetCalculatedData","calculateHandler","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","showResultData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Adzano/Desktop/ini masuk git/02-starting-project/src/components/Result/ResultList.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport ResultItem from \"./ResultItem\";\r\n\r\nconst ResultList = (props) => {\r\n\r\n    const investSubmited = props.setDataInvest\r\n    console.log(investSubmited)\r\n\r\n    const [calculatedData, SetCalculatedData] = useState(null)\r\n\r\n    function calculateHandler() {\r\n        const yearlyData = [];\r\n\r\n        let currentSavings = investSubmited['current-savings']; // feel free to change the shape of this input object!\r\n        const yearlyContribution = investSubmited['yearly-contribution']; // as mentioned: feel free to change the shape...\r\n        const expectedReturn = investSubmited['expected-return'] / 100;\r\n        const duration = investSubmited['duration'];\r\n\r\n        for (let i = 0; i < duration; i++) {\r\n            const yearlyInterest = currentSavings * expectedReturn;\r\n            currentSavings += yearlyInterest + yearlyContribution;\r\n            yearlyData.push({\r\n                // feel free to change the shape of the data pushed to the array!\r\n                year: i + 1,\r\n                yearlyInterest: yearlyInterest,\r\n                savingsEndOfYear: currentSavings,\r\n                yearlyContribution: yearlyContribution,\r\n            });\r\n        }\r\n        SetCalculatedData(yearlyData)\r\n    }\r\n\r\n    console.log(calculatedData)\r\n\r\n    return (\r\n        <div>\r\n            <ResultItem showResultData={calculateHandler()} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultList;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1B,MAAMC,cAAc,GAAGF,KAAK,CAACG,aAAa;EAC1CC,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;EAE3B,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1D,SAASa,gBAAgBA,CAAA,EAAG;IACxB,MAAMC,UAAU,GAAG,EAAE;IAErB,IAAIC,cAAc,GAAGR,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACxD,MAAMS,kBAAkB,GAAGT,cAAc,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAClE,MAAMU,cAAc,GAAGV,cAAc,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC9D,MAAMW,QAAQ,GAAGX,cAAc,CAAC,UAAU,CAAC;IAE3C,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MAC/B,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACZ;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACxB,CAAC,CAAC;IACN;IACAJ,iBAAiB,CAACE,UAAU,CAAC;EACjC;EAEAL,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC;EAE3B,oBACIR,OAAA;IAAAqB,QAAA,eACIrB,OAAA,CAACF,UAAU;MAACwB,cAAc,EAAEZ,gBAAgB,CAAC;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd,CAAC;AAAAvB,EAAA,CApCKF,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}