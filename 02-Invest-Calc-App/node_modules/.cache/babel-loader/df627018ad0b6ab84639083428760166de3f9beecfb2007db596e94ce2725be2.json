{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adzano\\\\Desktop\\\\ini masuk git\\\\02-starting-project\\\\src\\\\components\\\\Result\\\\ResultList.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ResultItem from \"./ResultItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultList = props => {\n  _s();\n  const investSubmited = props.setDataInvest;\n  console.log(investSubmited);\n  if (investSubmited.length === 0) {\n    console.log('empty');\n  } else {\n    console.log('succeed');\n  }\n  const [calculatedData, SetCalculatedData] = useState(null);\n\n  // function calculateHandler() {\n  //     const yearlyData = [];\n\n  //     let currentSavings = investSubmited['current-savings']; // feel free to change the shape of this input object!\n  //     const yearlyContribution = investSubmited['yearly-contribution']; // as mentioned: feel free to change the shape...\n  //     const expectedReturn = investSubmited['expected-return'] / 100;\n  //     const duration = investSubmited['invest-duration'];\n\n  //     for (let i = 0; i < duration; i++) {\n  //         const yearlyInterest = currentSavings * expectedReturn;\n  //         currentSavings += yearlyInterest + yearlyContribution;\n  //         yearlyData.push({\n  //             // feel free to change the shape of the data pushed to the array!\n  //             year: i + 1,\n  //             yearlyInterest: yearlyInterest,\n  //             savingsEndOfYear: currentSavings,\n  //             yearlyContribution: yearlyContribution,\n  //         });\n  //     }\n  //     console.log(yearlyData)\n  //     SetCalculatedData(yearlyData)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ResultItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ResultList, \"ihtVoOD5/8LizosBfjtB5i6wp74=\");\n_c = ResultList;\nexport default ResultList;\nvar _c;\n$RefreshReg$(_c, \"ResultList\");","map":{"version":3,"names":["useState","ResultItem","jsxDEV","_jsxDEV","ResultList","props","_s","investSubmited","setDataInvest","console","log","length","calculatedData","SetCalculatedData","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Adzano/Desktop/ini masuk git/02-starting-project/src/components/Result/ResultList.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport ResultItem from \"./ResultItem\";\r\n\r\nconst ResultList = (props) => {\r\n\r\n    const investSubmited = props.setDataInvest\r\n    console.log(investSubmited)\r\n\r\n    if (investSubmited.length === 0) {\r\n        console.log('empty')\r\n    } else {\r\n        console.log('succeed')\r\n    }\r\n\r\n    const [calculatedData, SetCalculatedData] = useState(null)\r\n\r\n    // function calculateHandler() {\r\n    //     const yearlyData = [];\r\n\r\n    //     let currentSavings = investSubmited['current-savings']; // feel free to change the shape of this input object!\r\n    //     const yearlyContribution = investSubmited['yearly-contribution']; // as mentioned: feel free to change the shape...\r\n    //     const expectedReturn = investSubmited['expected-return'] / 100;\r\n    //     const duration = investSubmited['invest-duration'];\r\n\r\n    //     for (let i = 0; i < duration; i++) {\r\n    //         const yearlyInterest = currentSavings * expectedReturn;\r\n    //         currentSavings += yearlyInterest + yearlyContribution;\r\n    //         yearlyData.push({\r\n    //             // feel free to change the shape of the data pushed to the array!\r\n    //             year: i + 1,\r\n    //             yearlyInterest: yearlyInterest,\r\n    //             savingsEndOfYear: currentSavings,\r\n    //             yearlyContribution: yearlyContribution,\r\n    //         });\r\n    //     }\r\n    //     console.log(yearlyData)\r\n    //     SetCalculatedData(yearlyData)\r\n    // }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <ResultItem getResultData={calculateHandler} showResultData={calculatedData} /> */}\r\n            {/* <p>{calculatedData}</p> */}\r\n            <ResultItem />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultList;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1B,MAAMC,cAAc,GAAGF,KAAK,CAACG,aAAa;EAC1CC,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;EAE3B,IAAIA,cAAc,CAACI,MAAM,KAAK,CAAC,EAAE;IAC7BF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACxB,CAAC,MAAM;IACHD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EAC1B;EAEA,MAAM,CAACE,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBACIG,OAAA;IAAAW,QAAA,eAGIX,OAAA,CAACF,UAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEd,CAAC;AAAAZ,EAAA,CA5CKF,UAAU;AAAAe,EAAA,GAAVf,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}