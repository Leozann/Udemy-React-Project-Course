{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adzano\\\\Desktop\\\\ini masuk git\\\\02-starting-project\\\\src\\\\components\\\\Result\\\\ResultList.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ResultItem from \"./ResultItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultList = props => {\n  _s();\n  const investSubmited = props.setDataInvest;\n  console.log(investSubmited);\n  const yearlyData = [];\n  useState({\n    year: i + 1,\n    yearlyInterest: yearlyInterest,\n    savingsEndOfYear: currentSavings,\n    yearlyContribution: yearlyContribution\n  });\n  function calculateHandler() {\n    let currentSavings = investSubmited.currentSavings; // feel free to change the shape of this input object!\n    const yearlyContribution = investSubmited.yearlyContribution; // as mentioned: feel free to change the shape...\n    const expectedReturn = investSubmited.expectedReturn / 100;\n    const duration = investSubmited.duration;\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ResultItem, {\n      showResultData: calculateHandler()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(ResultList, \"lG9EPOfYr71yEgxTCqIVNorZub0=\");\n_c = ResultList;\nexport default ResultList;\nvar _c;\n$RefreshReg$(_c, \"ResultList\");","map":{"version":3,"names":["useState","ResultItem","jsxDEV","_jsxDEV","ResultList","props","_s","investSubmited","setDataInvest","console","log","yearlyData","year","i","yearlyInterest","savingsEndOfYear","currentSavings","yearlyContribution","calculateHandler","expectedReturn","duration","push","children","showResultData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Adzano/Desktop/ini masuk git/02-starting-project/src/components/Result/ResultList.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport ResultItem from \"./ResultItem\";\r\n\r\nconst ResultList = (props) => {\r\n\r\n    const investSubmited = props.setDataInvest\r\n    console.log(investSubmited)\r\n    const yearlyData = [];\r\n\r\n    useState({\r\n        year: i + 1,\r\n        yearlyInterest: yearlyInterest,\r\n        savingsEndOfYear: currentSavings,\r\n        yearlyContribution: yearlyContribution,\r\n    })\r\n\r\n    function calculateHandler() {\r\n        let currentSavings = investSubmited.currentSavings// feel free to change the shape of this input object!\r\n        const yearlyContribution = investSubmited.yearlyContribution // as mentioned: feel free to change the shape...\r\n        const expectedReturn = investSubmited.expectedReturn / 100;\r\n        const duration = investSubmited.duration;\r\n\r\n        for (let i = 0; i < duration; i++) {\r\n            const yearlyInterest = currentSavings * expectedReturn;\r\n            currentSavings += yearlyInterest + yearlyContribution;\r\n            yearlyData.push({\r\n                // feel free to change the shape of the data pushed to the array!\r\n                year: i + 1,\r\n                yearlyInterest: yearlyInterest,\r\n                savingsEndOfYear: currentSavings,\r\n                yearlyContribution: yearlyContribution,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ResultItem showResultData={calculateHandler()} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultList;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE1B,MAAMC,cAAc,GAAGF,KAAK,CAACG,aAAa;EAC1CC,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;EAC3B,MAAMI,UAAU,GAAG,EAAE;EAErBX,QAAQ,CAAC;IACLY,IAAI,EAAEC,CAAC,GAAG,CAAC;IACXC,cAAc,EAAEA,cAAc;IAC9BC,gBAAgB,EAAEC,cAAc;IAChCC,kBAAkB,EAAEA;EACxB,CAAC,CAAC;EAEF,SAASC,gBAAgBA,CAAA,EAAG;IACxB,IAAIF,cAAc,GAAGT,cAAc,CAACS,cAAc;IAClD,MAAMC,kBAAkB,GAAGV,cAAc,CAACU,kBAAkB,EAAC;IAC7D,MAAME,cAAc,GAAGZ,cAAc,CAACY,cAAc,GAAG,GAAG;IAC1D,MAAMC,QAAQ,GAAGb,cAAc,CAACa,QAAQ;IAExC,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,QAAQ,EAAEP,CAAC,EAAE,EAAE;MAC/B,MAAMC,cAAc,GAAGE,cAAc,GAAGG,cAAc;MACtDH,cAAc,IAAIF,cAAc,GAAGG,kBAAkB;MACrDN,UAAU,CAACU,IAAI,CAAC;QACZ;QACAT,IAAI,EAAEC,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BC,gBAAgB,EAAEC,cAAc;QAChCC,kBAAkB,EAAEA;MACxB,CAAC,CAAC;IACN;EACJ;EAEA,oBACId,OAAA;IAAAmB,QAAA,eACInB,OAAA,CAACF,UAAU;MAACsB,cAAc,EAAEL,gBAAgB,CAAC;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd,CAAC;AAAArB,EAAA,CArCKF,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}