{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adzano\\\\Desktop\\\\ini masuk git\\\\Udemy\\\\05-starting-project\\\\src\\\\store\\\\AppProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'add_item') {\n    // concat method to create new array without editing existing array\n    // const updatedItems = state.items.concat(action.target);\n    let updatedItems;\n    const updatedAmount = state.totalAmount + action.target.price * action.target.amount;\n    const findCartItem = state.items.findIndex(item => item.id === action.target.id);\n    const cartExist = state.items[findCartItem];\n    // console.log(cartExist)\n    if (cartExist) {\n      const updatedItem = {\n        ...cartExist,\n        amount: cartExist.amount + action.target.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[findCartItem] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.target);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n  if (action.type === 'remove_item') {\n    const findCartItem = state.items.findIndex(item => item.id === action.id);\n    const cartExist = state.items[findCartItem];\n    // total amount will be decreased by the price of one single removed item\n    console.log(cartExist);\n    const updatedAmount = state.totalAmount - cartExist.price;\n    let updatedItems;\n    console.log(cartExist);\n    if (cartExist.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...cartExist,\n        amount: cartExist.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[findCartItem] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n  return defaultCartState;\n};\nconst AppProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: 'add_item',\n      target: item\n    });\n  };\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: 'remove_item',\n      id: id\n    });\n  };\n  const setContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: setContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 13\n  }, this);\n};\n_s(AppProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = AppProvider;\nexport default AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","updatedAmount","target","price","amount","findCartItem","findIndex","item","id","cartExist","updatedItem","concat","console","log","filter","AppProvider","props","_s","cartState","dispatchCartAction","addItemHandler","removeItemHandler","setContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Adzano/Desktop/ini masuk git/Udemy/05-starting-project/src/store/AppProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\"\r\nimport CartContext from \"./CartContext\"\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === 'add_item') {\r\n        // concat method to create new array without editing existing array\r\n        // const updatedItems = state.items.concat(action.target);\r\n        let updatedItems;\r\n        const updatedAmount = state.totalAmount + (action.target.price * action.target.amount);\r\n        const findCartItem = state.items.findIndex((item) => item.id === action.target.id);\r\n        const cartExist = state.items[findCartItem];\r\n        // console.log(cartExist)\r\n        if (cartExist) {\r\n            const updatedItem = {\r\n                ...cartExist,\r\n                amount: cartExist.amount + action.target.amount,\r\n            };\r\n            updatedItems = [...state.items];\r\n            updatedItems[findCartItem] = updatedItem;\r\n        } else {\r\n            updatedItems = state.items.concat(action.target);\r\n        }\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedAmount\r\n        };\r\n    }\r\n    if (action.type === 'remove_item') {\r\n        const findCartItem = state.items.findIndex((item) => item.id === action.id);\r\n        const cartExist = state.items[findCartItem];\r\n        // total amount will be decreased by the price of one single removed item\r\n        console.log(cartExist)\r\n        const updatedAmount = state.totalAmount - cartExist.price\r\n        let updatedItems\r\n        console.log(cartExist)\r\n        if (cartExist.amount === 1) {\r\n            updatedItems = state.items.filter((item) => (item.id !== action.id));\r\n        } else {\r\n            const updatedItem = { ...cartExist, amount: cartExist.amount - 1 };\r\n            updatedItems = [...state.items];\r\n            updatedItems[findCartItem] = updatedItem\r\n        }\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedAmount\r\n        };\r\n    }\r\n    return defaultCartState;\r\n};\r\nconst AppProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n    const addItemHandler = (item) => {\r\n        dispatchCartAction({ type: 'add_item', target: item })\r\n    };\r\n    const removeItemHandler = (id) => {\r\n        dispatchCartAction({ type: 'remove_item', id: id })\r\n    };\r\n    const setContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemHandler,\r\n        removeItem: removeItemHandler\r\n    }\r\n    return (<CartContext.Provider value={setContext}>{props.children}</CartContext.Provider>)\r\n}\r\n\r\nexport default AppProvider"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}